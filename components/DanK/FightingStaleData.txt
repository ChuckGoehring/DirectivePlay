
On Fri, Oct 7, 2016 at 9:01 AM, Dan Kahle <dan.kahle@gmail.com> wrote:
Doesn't need websocket at all though. The app can't do anything wthout the api and the api 
authenticates and authorizes on every call. You simply shut them down at the api side and 
return an unauth message (401) that the ui puts up a modal on. Done. That other interview 
question though I want to try out. Maybe in a second, just for shits and giggles. 

On Thu, Oct 6, 2016 at 4:43 PM, Charles Goehring <chuckgoehring2@gmail.com> wrote:
WebSocket API was what I suggested at CareFusion when this came up.  They wanted to be able 
to grant or revoke permissions that would take effect immediately without the user having to 
log out and in.

In the interview, I suggested they not hold data in the controller and retrieve it every time, 
if it is that critical.  I should have added that when it gets saved, I would check then and 
reject the changes if a delta was detected.  i suppose it all depends on why a notification 
should b bubbled up to the ui.

On Thu, Oct 6, 2016 at 9:54 AM, Dan Kahle <dan.kahle@gmail.com> wrote:
That's a weird question and we don't do that. We have sockets (http://socket.io/) and the api 
sends a socket message to ui, once we get it we refresh. It's possible you could have a 
datastructure say an array of objects inside an encompassing object delivered from the service. 
Then you databind to that array and the service periodically updates that array, so you 
automatically have the latest just from a databind (ng-repeat)? Be a quick test, just mock the 
api call.

On Thu, Oct 6, 2016 at 11:22 AM, Charles Goehring <chuckgoehring2@gmail.com> wrote:
Had an interview question that didn't go so good.  Asian with heavy accent asked if the 
controller calls a service to get data from the back-end and the service is being refreshed 
periodically, how does the controller get the changes that occur at the database level?   
Apparently the answer was the digest cycle and I suspect the apply method.   Is that correct 
and can you elaborate on it?




Yeah this does it just fine:

<body ng-controller="mainCtrl as vm">

<div ng-repeat="val in vm.vals">{{val}}</div>

<script>
   angular.module('app', [])
      .factory('Serv', function($rootScope) {
         var rtn = {
            vals: [1,2,3]
         }

         // simulates service refreshing data, either via socket message or just a timer
         setTimeout(function() {
            $rootScope.$apply(function() {
               rtn.vals = [4,5,6];
            })
         }, 1000);


         return {
            getVals: function() {
               return rtn;
            }
         }
      })

   .controller('mainCtrl', function ($scope, Serv) {
      var vm = this;

      vm.vals = Serv.getVals();

      });// controller





<body ng-controller="mainCtrl as vm">

<div ng-repeat="val in vm.vals">{{val}}</div>

<script>
   angular.module('app', [])
      .factory('Serv', function($rootScope) {
         var rtn = {
            vals: [1,2,3]
         }

         // simulates service refreshing data, either via socket message or just a timer
         setTimeout(function() {
            $rootScope.$apply(function() {
               rtn.vals = [4,5,6];
            })
         }, 1000);


         return {
            getVals: function() {
               return rtn;
            }
         }
      })

   .controller('mainCtrl', function ($scope, Serv) {
      var vm = this;

      vm.vals = Serv.getVals();

      });// controller